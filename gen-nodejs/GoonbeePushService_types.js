//
// Autogenerated by Thrift Compiler (0.9.1)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
var Thrift = require('thrift').Thrift;
var GoonbeeShared_ttypes = require('./GoonbeeShared_types')


var ttypes = module.exports = {};
if (typeof GBPushService === 'undefined') {
  GBPushService = {};
}
ttypes.PushTokenType = {
'APNS' : 0,
'GCM' : 1
};
GBPushService.PushToken = module.exports.PushToken = function(args) {
  this.type = null;
  this.token = null;
  if (args) {
    if (args.type !== undefined) {
      this.type = args.type;
    }
    if (args.token !== undefined) {
      this.token = args.token;
    }
  }
};
GBPushService.PushToken.prototype = {};
GBPushService.PushToken.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.type = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.token = input.readString();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

GBPushService.PushToken.prototype.write = function(output) {
  output.writeStructBegin('PushToken');
  if (this.type !== null && this.type !== undefined) {
    output.writeFieldBegin('type', Thrift.Type.I32, 1);
    output.writeI32(this.type);
    output.writeFieldEnd();
  }
  if (this.token !== null && this.token !== undefined) {
    output.writeFieldBegin('token', Thrift.Type.STRING, 2);
    output.writeString(this.token);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

